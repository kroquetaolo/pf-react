paths:
  /api/products:
    get:
      summary: Return a list of carts
      tags:
        - Products
      responses:
        "200":
          description: Product were satisfactorily obtained from the database.
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Product'
        "500":
          description: Internal server error, generated by the query or server failure
    post:
      summary: Add a new product to the database
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/addProduct'
      responses:
        "200":
          description: Product successfully added to the database
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: new product created successfully
        "500":
          description: Internal server error, generated by the query or server failure
  /api/products/{pid}:
    get:
      summary: Get a single product by its ID
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: ID of the product you wish to request
          schema:
            type: string
      responses:
        "200":
          description: Product found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        "500":
          description: Internal server error, generated by the query or server failure
    put:
      summary: Get a single product by its ID
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: ID of the product you wish to request
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/updateProduct'
      responses:
        "200":
          description: Product found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The product has been updated
        "500":
          description: Internal server error, generated by the query or server failure
    delete:
      summary: Delete a product by its ID
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: ID of the product you wish to delete
          schema:
            type: string
      responses:
        "200":
          description: Product successfully deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The product ${pid} has been deleted
        "500":
          description: Internal server error, generated by the query or server failure
components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: string
          example: "ObjectId('66a9baa4c84609f24ad652d9')"
        title:
          type: string
          example: 'Arroz'
        description:
          type: string
          example: 'Un saludable arroz'
        price:
          type: integer
          example: 112
        thumbnail:
          type: array
          items:
            type: string
            example: 'https://i.imgur.com/d735tq2.jpeg'
          example:
          - 'https://i.imgur.com/d735tq2.jpeg'
          - 'https://i.imgur.com/eSDZhDb.jpeg'
        stock:
          type: integer
          example: 23
        status:
          type: boolean
          example: true
        owner:
          type: string
          example: 'jhon@example.com'
  requestBodies:
    updateProduct:
      type: object
      properties:
        newValue:
          type: string
          example: 'Palta'
        key:
          type: string
          example: 'title'
      example:
        newValue: 'palta'
        key: 'title'
    addProduct:
      type: object
      properties:
        title:
          type: string
          example: 'Aguacate'
        description:
          type: string
          example: 'un aguacate maduro'
        stock:
          type: integer
          example: 10
        code:
          type: string
          example: 'V016'
        price:
          type: integer
          example: 150
        thumbnail:
          type: array
          items:
            type: string
            example: 'aguacate-Primary.jpg'
      example:
        title: "Aguacate"
        description: "un aguacate maduro"
        stock: 10
        code: "V016"
        price: 150
        thumbnail:
          - "aguacate-Primary.jpg"
          - "aguacate-Secundary.jpg"
